QUESTION 1

#include <stdio.h>

int main() {
   int matrix1[3][3], matrix2[3][3], sum[3][3], i, j;

   printf("Enter the elements of the first matrix:\n");
   for (i = 0; i < 3; i++) {
      for (j = 0; j < 3; j++) {
         scanf("%d", &matrix1[i][j]);
      }
   }

   printf("Enter the elements of the second matrix:\n");
   for (i = 0; i < 3; i++) {
      for (j = 0; j < 3; j++) {
         scanf("%d", &matrix2[i][j]);
      }
   }

   for (i = 0; i < 3; i++) {
      for (j = 0; j < 3; j++) {
         sum[i][j] = matrix1[i][j] + matrix2[i][j];
      }
   }

   printf("\nThe sum of the two matrices is:\n");
   for (i = 0; i < 3; i++) {
      for (j = 0; j < 3; j++) {
         printf("%d\t", sum[i][j]);
      }
      printf("\n");
   }

   return 0;
}



QUESTION 2
#include <stdio.h>

void swap(int* a, int* b)
{
    int t = *a;
    *a = *b;
    *b = t;
}

int partition(int arr[], int low, int high)
{
    int pivot = arr[high];
    int i = low - 1;

    for (int j = low; j <= high - 1; j++)
    {
        if (arr[j] <= pivot)
        {
            i++;
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i + 1], &arr[high]);
    return (i + 1);
}

void quickSort(int arr[], int low, int high)
{
    if (low < high)
    {
        int pi = partition(arr, low, high);

        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

void printArray(int arr[], int size)
{
    for (int i = 0; i < size; i++)
        printf("%d ", arr[i]);
}

int main()
{
    int arr[] = {13, 7, 34, 5, 1, 8, 31, 100, 3};
    
     int n = sizeof(arr) / sizeof(arr[0]); 

     printf("Unsorted array: \n"); 
     printArray(arr,n); 

     printf("\nSorted array: \n"); 
     quickSort(arr ,0 ,n-1); 
     printArray(arr,n); 

     return(0); 
}
